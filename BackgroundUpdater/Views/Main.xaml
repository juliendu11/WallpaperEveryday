<Window x:Class="BackgroundUpdater.Views.Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:AppClass="clr-namespace:BackgroundUpdater.Classes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}"
        xmlns:vm="clr-namespace:BackgroundUpdater.ViewModels" xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        xmlns:local="clr-namespace:BackgroundUpdater" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="Main" Height="703" Width="941"   WindowState="{Binding CurWindowState, Mode=TwoWay}"  ResizeMode="NoResize"
        >
    <Window.DataContext>
        <vm:MainViewModel></vm:MainViewModel>
    </Window.DataContext>
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0,0,0,1" CornerRadius="0" />
    </WindowChrome.WindowChrome>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoaded}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <materialDesign:DialogHost Identifier="MainDialogHost">
        <Grid>
            <StackPanel>
                <tb:TaskbarIcon
            Visibility="Visible"
             MenuActivation="LeftOrRightClick"
IconSource="/Resources/61SDXtp8G4L.ico"
  >

                    <!-- Set a simple context menu  -->
                    <tb:TaskbarIcon.ContextMenu>
                        <ContextMenu
     >
                            <MenuItem Header="Extend" Command="{Binding EditWindow}"/>
                            <MenuItem Header="Exit" Command="{Binding Exit}" />
                        </ContextMenu>
                    </tb:TaskbarIcon.ContextMenu>

                </tb:TaskbarIcon>

                <materialDesign:ColorZone
  Mode="PrimaryDark"
  Padding="16"
  CornerRadius="3"
  materialDesign:ShadowAssist.ShadowDepth="Depth3"
  Margin="2,2,2,0">
                    <DockPanel>

                        <materialDesign:PopupBox
      DockPanel.Dock="Right"
      PlacementMode="BottomAndAlignRightEdges">
                            <StackPanel Width="200">
                                <Button Command="{Binding EditWindow}" Margin="5,5,5,5">
                                    Minimize
                                </Button>
                                <Button Command="{Binding Exit}" Margin="5,5,5,5">
                                    Exit
                                </Button>
                            </StackPanel>
                        </materialDesign:PopupBox>
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="0,0,10,0">
                            <TextBlock
        VerticalAlignment="Center"
        Margin="16 0 0 0"><Run Text="Dark mode"/></TextBlock>
                            <ToggleButton Width="50" IsChecked="{Binding DarkMode, Mode=TwoWay}" Margin="10,0,0,0" />
                        </StackPanel>
                        <StackPanel
      Orientation="Horizontal">

                            <TextBlock
        VerticalAlignment="Center"
        Margin="16 0 0 0" FontSize="16" FontWeight="Normal">
      Wallpapers Everyday
                            </TextBlock>

                        </StackPanel>
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid Height="620" Width="935">
                    <materialDesign:Card
    materialDesign:ShadowAssist.ShadowDepth="Depth2"
    Padding="20" Margin="10,10,564,5">
                        <StackPanel>
                            <StackPanel Margin="5,0,5,20">
                                <TextBox materialDesign:HintAssist.Hint="YourAPI Key" Height="29" Text="{Binding ApiKey, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                                <Button Margin="0,10,0,0" Command="{Binding LoadAPIKey}" Content="Load"/>
                            </StackPanel>
                            <DockPanel IsEnabled="False">
                                <Label Content="Enable" Width="198"/>
                                <ToggleButton DockPanel.Dock="Right" IsChecked="{Binding Setting.Launch, Mode=TwoWay}" Command="{Binding CheckedChanged}"/>
                            </DockPanel>
                            <DockPanel Margin="0,10,0,0">
                                <Label Content="Launch at startup" Width="198"/>
                                <ToggleButton IsChecked="{Binding LaunchAtStartup, Mode=TwoWay}"/>
                            </DockPanel>
                            <DockPanel Margin="0,10,0,0">
                                <Label Content="Sort" Width="170" Margin="0,0,10,0"/>
                                <ComboBox
  materialDesign:HintAssist.Hint="Sort"
  MinWidth="72"
  Margin="0 0 0 0"
  ItemsSource="{Binding SortType}"
                            SelectedItem="{Binding SortTypeSelected, Mode=TwoWay}"
   Width="74">

                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </DockPanel>

                            <DockPanel Margin="0,10,0,0">
                                <Label Content="Delete old wallpapers" Width="198"/>
                                <ToggleButton IsChecked="{Binding DeleteOldWallpapers, Mode=TwoWay}"/>
                            </DockPanel>
                            <Separator Margin="10" Height="2" Width="300"/>
                            <DockPanel Margin="0,5,0,0" >
                                <Label Content="Height" Width="170" Margin="0,0,10,0"/>
                                <TextBox Text="{Binding Height,Mode=TwoWay, UpdateSourceTrigger=LostFocus}"></TextBox>
                            </DockPanel>
                            <DockPanel Margin="0,10,0,0">
                                <Label Content="Width" Width="170" Margin="0,0,10,0"/>
                                <TextBox Text="{Binding Width,Mode=TwoWay, UpdateSourceTrigger=LostFocus}"></TextBox>
                            </DockPanel>
                            <DockPanel Margin="0,10,0,10">
                                <Label Content="Size operator" Width="170" Margin="0,0,10,0"/>
                                <ComboBox
  materialDesign:HintAssist.Hint="Operator"
  MinWidth="72"
  Margin="0 0 0 0"
  ItemsSource="{Binding OperatorType}"
                            SelectedItem="{Binding SizeOperatorSelected, Mode=TwoWay}"
   Width="74">

                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </DockPanel>
                            <Button Margin="5" Style="{StaticResource MaterialDesignRaisedAccentButton}" Command="{Binding LoadDefaultSizeSetting}">
                                Load default
                            </Button>
                            <Separator Margin="10" Height="2" Width="300"></Separator>
                            <Button Margin="10,0,10,5" Command="{Binding ForceLoadNewWallpaper}" Content="Force load new wallpaper"/>
                            <Label Content="Actual wallpaper: " Margin="0,5,0,0"/>
                            <DockPanel Height="69">
                                <Image Height="71" Width="166" DockPanel.Dock="Left" Source="{Binding ActualWallpaper}" Stretch="Uniform">
                                    <Image.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding OpenActualWallpaper}"/>
                                    </Image.InputBindings>
                                </Image>
                                <Button Margin="5,0,5,0" Height="44" Command="{Binding AddToFavorite}">
                                    <TextBlock TextAlignment="Center" TextWrapping="Wrap">Save in favorite</TextBlock>
                                </Button>
                            </DockPanel>
                        </StackPanel>
                    </materialDesign:Card>
                    <StackPanel Margin="376,10,0,5">
                        <StackPanel
  Orientation="Horizontal"
  Margin="4,10,4,4" HorizontalAlignment="Center">
                            <RadioButton
    Style="{StaticResource MaterialDesignTabRadioButton}"
    Margin="4"
    IsChecked="True"
    Content="CATEGORIES" Command="{Binding TabMenuChanged}" CommandParameter="CATEGORIES"/>
                            <RadioButton
    Style="{StaticResource MaterialDesignTabRadioButton}"
    Margin="4"
    IsChecked="False"
    Content="FAVORITES" Command="{Binding TabMenuChanged}" CommandParameter="FAVORITES"/>
                        </StackPanel>
                        <materialDesign:Card Visibility="{Binding CategoriesTab}"
                materialDesign:ShadowAssist.ShadowDepth="Depth2"
                Padding="20" Margin="0,10,5,5" Width="532" Height="538">
                            <StackPanel>
                                <DockPanel>
                                    <Label Content="Number of activated categories:" VerticalContentAlignment="Center"/>
                                    <Label Content="{Binding CategoriesEnabled}" VerticalContentAlignment="Center" Margin="5,0,0,0" Width="145"/>
                                    <Button DockPanel.Dock="Right" Width="112" Command="{Binding DisableAllCategory}" Content="Disable all"/>
                                </DockPanel>
                                <ListBox ItemsSource="{Binding CategoryModels}" Height="456" Margin="0,10,0,0">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel HorizontalAlignment="Center"/>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <materialDesign:Card Height="106"
    materialDesign:ShadowAssist.ShadowDepth="Depth4"
    Padding="32" Width="130">
                                                <StackPanel>
                                                    <TextBlock FontSize="12" Text="{Binding Name}" HorizontalAlignment="Center"/>
                                                    <ToggleButton IsChecked="{Binding Activate}" Command="{Binding DataContext.CategoryCheckedChanged, RelativeSource={RelativeSource AncestorType={x:Type Window}, AncestorLevel=1}}" CommandParameter="{Binding}" Margin="0,10,0,0"/>
                                                </StackPanel>
                                            </materialDesign:Card>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </materialDesign:Card>
                        <materialDesign:Card Visibility="{Binding FavoritesTab}"
                        
                materialDesign:ShadowAssist.ShadowDepth="Depth2"
                Padding="20" Margin="0,10,5,5" Width="532" Height="538">
                            <StackPanel>
                                <ListBox ItemsSource="{Binding FavoriteModels, IsAsync=True}" Height="456" Margin="0,10,0,0">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel Orientation="Horizontal" Height="855" Width="484"/>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <materialDesign:Card Height="195"
    materialDesign:ShadowAssist.ShadowDepth="Depth4"
     Width="215">
                                                <StackPanel >
                                                    <Image Source="{Binding Image}" Width="auto" Height="120" Stretch="Fill"></Image>
                                                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0" HorizontalAlignment="Center">
                                                        <Label Content="Is actual: "></Label>
                                                        <Label Content="{Binding IsActual}"></Label>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0" HorizontalAlignment="Center">
                                                        <Button  HorizontalAlignment="Center" Command="{Binding DataContext.UseThisWallpaper, RelativeSource={RelativeSource AncestorType={x:Type Window}, AncestorLevel=1}}" CommandParameter="{Binding}" Margin="0,0,5,0" Width="71.92">
                                                            Use
                                                        </Button>
                                                        <Button  HorizontalAlignment="Center" Command="{Binding DataContext.DeleteThisWallpaper, RelativeSource={RelativeSource AncestorType={x:Type Window}, AncestorLevel=1}}" CommandParameter="{Binding}" Margin="5,0,0,0">
                                                            Delete
                                                        </Button>
                                                    </StackPanel>
                                                </StackPanel>
                                            </materialDesign:Card>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </materialDesign:Card>
                    </StackPanel>


                </Grid>

                <ProgressBar Height="6" Visibility="{Binding Path=(local:StaticProps.ShowProgressBar)}"
                IsIndeterminate="True" Margin="5,0,5,0"  />
            </StackPanel>
            <materialDesign:Snackbar MessageQueue="{Binding Path=(local:StaticProps.SnackbarMessageQueue)}"
   Margin="0,607,0,0" VerticalAlignment="Stretch" >
            </materialDesign:Snackbar>
        </Grid>
    </materialDesign:DialogHost>

</Window>
