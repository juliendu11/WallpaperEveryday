<Window x:Class="BackgroundUpdater.Views.Main"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:AppClass="clr-namespace:BackgroundUpdater.Classes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}"
        xmlns:local="clr-namespace:BackgroundUpdater.Views"
        xmlns:vm="clr-namespace:BackgroundUpdater.ViewModels" xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="Main" Height="570" Width="844" ResizeMode="NoResize"  WindowState="{Binding CurWindowState, Mode=TwoWay}" AllowsTransparency="True" WindowStyle="None"
        >

    <Window.DataContext>
        <vm:MainViewModel></vm:MainViewModel>
    </Window.DataContext>
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0,0,0,1" CornerRadius="0" />
    </WindowChrome.WindowChrome>

    <StackPanel>
        <tb:TaskbarIcon
PopupActivation="DoubleClick"
            Visibility="Visible"
             MenuActivation="LeftOrRightClick"
IconSource="/Resources/61SDXtp8G4L.ico"
  >

            <!-- Set a simple context menu  -->
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu
     >
                    <MenuItem Header="Extend" Command="{Binding EditWindow}"/>
                    <MenuItem Header="Exit" Command="{Binding Exit}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>

        </tb:TaskbarIcon>

        <materialDesign:ColorZone
  Mode="PrimaryDark"
  Padding="16"
  CornerRadius="3"
  materialDesign:ShadowAssist.ShadowDepth="Depth3"
  Margin="2,2,2,0">
            <DockPanel>

                <materialDesign:PopupBox
      DockPanel.Dock="Right"
      PlacementMode="BottomAndAlignRightEdges">
                    <StackPanel Width="200">
                        <Button Command="{Binding EditWindow}" Margin="5,5,5,5">
                            Minimize
                        </Button>
                        <Button Command="{Binding Exit}" Margin="5,5,5,5">
                            Exit
                        </Button>
                    </StackPanel>
                </materialDesign:PopupBox>
                <StackPanel
      Orientation="Horizontal">
                    <Ellipse Width="26">
                        <Ellipse.Fill>
                            <ImageBrush ImageSource="/Resources/61SDXtp8G4L.png"/>
                        </Ellipse.Fill>

                    </Ellipse>
                    <TextBlock
        VerticalAlignment="Center"
        Margin="16 0 0 0" FontSize="16" FontWeight="Normal">
      Wallpaper updater
                    </TextBlock>

                </StackPanel>
            </DockPanel>
        </materialDesign:ColorZone>
        <Grid Height="488" Width="844">
            <materialDesign:Card
    materialDesign:ShadowAssist.ShadowDepth="Depth2"
    Padding="20" Margin="10,10,532,10">
                <StackPanel>
                    <StackPanel Margin="5,0,5,20">
                        <TextBox materialDesign:HintAssist.Hint="YourAPI Key" Height="23" Text="{Binding ApiKey, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                        <Button Margin="0,10,0,0" Command="{Binding LoadAPIKey}">
                            Load
                        </Button>
                    </StackPanel>
                    <DockPanel IsEnabled="False">
                        <Label Content="Enable" Width="198"></Label>
                        <ToggleButton DockPanel.Dock="Right" IsChecked="{Binding Setting.Launch, Mode=TwoWay}" Command="{Binding CheckedChanged}"></ToggleButton>
                    </DockPanel>
                    <DockPanel Margin="0,10,0,0">
                        <Label Content="Launch at startup" Width="198"></Label>
                        <ToggleButton IsChecked="{Binding LaunchAtStartup, Mode=TwoWay}"></ToggleButton>
                    </DockPanel>
                    <DockPanel Margin="0,10,0,0">
                        <Label Content="Sort" Width="170" Margin="0,0,10,0"></Label>
                        <ComboBox
  materialDesign:HintAssist.Hint="Sort"
  MinWidth="72"
  Margin="0 0 0 0"
  ItemsSource="{Binding SortType}"
                            SelectedItem="{Binding SortTypeSelected, Mode=TwoWay}"
   Width="74">

                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                        </ComboBox>
                    </DockPanel>

                    <DockPanel Margin="0,10,0,0">
                        <Label Content="Delete old wallpapers" Width="198"></Label>
                        <ToggleButton IsChecked="{Binding DeleteOldWallpapers, Mode=TwoWay}"></ToggleButton>
                    </DockPanel>
                    <Button Margin="10,20,10,0" Command="{Binding ForceLoadNewWallpaper}">
                        Force load new wallpaper
                    </Button>
                </StackPanel>
            </materialDesign:Card>
            <materialDesign:Card
                materialDesign:ShadowAssist.ShadowDepth="Depth2"
                Padding="20" Margin="316,10,10,10">
                <StackPanel>
                    <DockPanel>
                        <Label Content="Number of activated categories:" VerticalContentAlignment="Center"></Label>
                        <Label Content="5" VerticalContentAlignment="Center" Margin="5,0,0,0" Width="145"></Label>
                        <Button DockPanel.Dock="Right" Width="112" Command="{Binding DisableAllCategory}">
                            Disable all
                        </Button>
                    </DockPanel>
                    <ListBox ItemsSource="{Binding CategoryModels}" Height="394" Margin="0,10,0,0">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel HorizontalAlignment="Center"></WrapPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card Height="106"
    materialDesign:ShadowAssist.ShadowDepth="Depth4"
    Padding="32" Width="118">
                                    <StackPanel>
                                        <TextBlock FontSize="12" Text="{Binding Name}" HorizontalAlignment="Center"/>
                                        <ToggleButton IsChecked="{Binding Activate}" Command="{Binding DataContext.CategoryCheckedChanged,RelativeSource={RelativeSource AncestorType=Window, AncestorLevel=1}}" CommandParameter="{Binding}" Margin="0,10,0,0"></ToggleButton>
                                    </StackPanel>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </materialDesign:Card>

        </Grid>
        <ProgressBar Height="6"
                IsIndeterminate="True"  />
    </StackPanel>


</Window>
